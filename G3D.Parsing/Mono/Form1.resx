<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>133, 17</value>
  </metadata>
  <metadata name="openGcode.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>287, 24</value>
  </metadata>
  <metadata name="CP2102.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>410, 21</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABEXAAARFwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKvAAA//8AAGvfAwBr3wQAWswAAFvNAAAA
        AAAAAAAAAAAAAABeygAAW8cBAFzHBQBbxwIAXskAABSEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAEu8AAAJbQAAbeMDAG7mBABc0AAAAAAAAGjiAAAAAAAAc+ogAHPqKwBw
        5QMAceYAAIzlAAB65QAAdOcBAHz0AQBq2w8AZ9YzAGnZEABo1gAAINQAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        YAjx4+AI8ePgP//j////4/////////////8=
</value>
  </data>
</root>